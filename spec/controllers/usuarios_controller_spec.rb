require 'spec_helper'
# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe UsuariosController do
  render_views

  # This should return the minimal set of attributes required to create a valid
  # Usuario. As you add validations to Usuario, be sure to
  # update the return value of this method accordingly.
  def valid_attributes
    {:username => "MyString",
     :email => "MyString@example.com",
     :password => "example12",
     :password_confirmation => "example12"}
  end
  

  # This should return the minimal set of values that should be in the session
  # in order to pass any filters (e.g. authentication) defined in
  # UsuariosController. Be sure to keep this updated too.
  def valid_session
    {:email => "MyString@example.com", :password => "example12"}
  end

  describe "GET new" do
    it "assigns a new usuario as @usuario" do
      get :new, {}, valid_session
      assigns(:usuario).should be_a_new(Usuario)
    end
  end

  describe "GET show" do

    it "assigns the requested usuario as @usuario" do
      @usuario = Usuario.create! valid_attributes
      get :show, {:id => @usuario.to_param}, valid_session
      assigns(:usuario).should eq(@usuario)
    end
end